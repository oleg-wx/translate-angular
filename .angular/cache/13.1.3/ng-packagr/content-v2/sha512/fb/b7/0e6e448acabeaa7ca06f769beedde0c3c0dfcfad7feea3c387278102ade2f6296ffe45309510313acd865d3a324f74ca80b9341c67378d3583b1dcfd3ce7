{"hash":"1d0a1c344fe1807569382a6f5e24c6c91cde8bb9","fesm2020":{"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Optional, Inject, Directive, Input, Pipe, APP_INITIALIZER, NgModule } from '@angular/core';\nimport { Translations } from 'simply-translate';\nimport { BehaviorSubject, Subject, tap, lastValueFrom } from 'rxjs';\nimport { v4 } from 'uuid';\n\nconst DEFAULT_OPTIONS = new InjectionToken('TranslateService DEFAULT_OPTIONS');\r\nclass TranslateService {\r\n    constructor(options) {\r\n        this.langChangeSubj = new BehaviorSubject({});\r\n        this.dictionarySubj = new Subject();\r\n        this.languageChange$ = this.langChangeSubj.asObservable();\r\n        this.dictionaryChange$ = this.dictionarySubj.asObservable();\r\n        const cd = options ? options.cacheDynamic : false;\r\n        this.service = new Translations({}, { cacheDynamic: options?.cacheDynamic !== false, $less: !!options?.$less });\r\n    }\r\n    set defaultLang(val) {\r\n        this.service.defaultLang = val;\r\n        this.langChangeSubj.next({ defaultLang: this.defaultLang, fallbackLang: this.fallbackLang });\r\n    }\r\n    get defaultLang() {\r\n        return this.service.defaultLang;\r\n    }\r\n    set fallbackLang(val) {\r\n        this.service.fallbackLang = val;\r\n        this.langChangeSubj.next({ defaultLang: this.defaultLang, fallbackLang: this.fallbackLang });\r\n    }\r\n    get fallbackLang() {\r\n        return this.service.fallbackLang;\r\n    }\r\n    translateTo(lang, key, dynamicValuesOrFallback, fallback) {\r\n        return this.service.translateTo(lang, key, dynamicValuesOrFallback, fallback);\r\n    }\r\n    translate(key, dynamicValuesOrFallback, fallback) {\r\n        return this.service.translate(key, dynamicValuesOrFallback, fallback);\r\n    }\r\n    extendDictionary(lang, dictionary) {\r\n        this.service.extendDictionary(lang, dictionary);\r\n        this.dictionarySubj.next();\r\n    }\r\n}\r\nTranslateService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: TranslateService, deps: [{ token: DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\r\nTranslateService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: TranslateService });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: TranslateService, decorators: [{\r\n            type: Injectable\r\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\r\n                    type: Optional\r\n                }, {\r\n                    type: Inject,\r\n                    args: [DEFAULT_OPTIONS]\r\n                }] }]; } });\n\nclass TranslateDirective {\r\n    constructor(element, service) {\r\n        this.element = element;\r\n        this.service = service;\r\n        this._init = false;\r\n    }\r\n    ngOnInit() {\r\n        this._init = true;\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (!this._init)\r\n            this._fb = this.element.nativeElement.innerText;\r\n        if (changes._key.currentValue) {\r\n            this.element.nativeElement.innerText = this.service.translateTo(this._to || this.service.defaultLang, this._key, this._values, this._fb);\r\n        }\r\n        else if (changes._fb.currentValue !== this.element.nativeElement.innerText) {\r\n            this.element.nativeElement.innerText = this._fb || '';\r\n        }\r\n    }\r\n}\r\nTranslateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: TranslateDirective, deps: [{ token: i0.ElementRef }, { token: TranslateService }], target: i0.ɵɵFactoryTarget.Directive });\r\nTranslateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.2\", type: TranslateDirective, selector: \"[translate]\", inputs: { _key: [\"translate\", \"_key\"], _to: [\"to\", \"_to\"], _values: [\"values\", \"_values\"] }, usesOnChanges: true, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: TranslateDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[translate]',\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: TranslateService }]; }, propDecorators: { _key: [{\r\n                type: Input,\r\n                args: ['translate']\r\n            }], _to: [{\r\n                type: Input,\r\n                args: ['to']\r\n            }], _values: [{\r\n                type: Input,\r\n                args: ['values']\r\n            }] } });\n\nclass TranslatePipe {\r\n    constructor(service) {\r\n        this.service = service;\r\n    }\r\n    transform(key, dynamicOrFallback, fallback) {\r\n        if (key == null || key === '') {\r\n            return key.toString();\r\n        }\r\n        const result = this.service.translate(key, dynamicOrFallback, fallback);\r\n        return result;\r\n    }\r\n}\r\nTranslatePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: TranslatePipe, deps: [{ token: TranslateService }], target: i0.ɵɵFactoryTarget.Pipe });\r\nTranslatePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: TranslatePipe, name: \"translate\" });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: TranslatePipe, decorators: [{\r\n            type: Pipe,\r\n            args: [{ name: 'translate' }]\r\n        }], ctorParameters: function () { return [{ type: TranslateService }]; } });\r\nclass TranslateToPipe {\r\n    constructor(service) {\r\n        this.service = service;\r\n    }\r\n    transform(key, lang, dynamicOrFallback, fallback) {\r\n        if (key == null || key === '') {\r\n            return key.toString();\r\n        }\r\n        const result = this.service.translateTo(lang, key, dynamicOrFallback, fallback);\r\n        return result;\r\n    }\r\n}\r\nTranslateToPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: TranslateToPipe, deps: [{ token: TranslateService }], target: i0.ɵɵFactoryTarget.Pipe });\r\nTranslateToPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: TranslateToPipe, name: \"translateTo\" });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: TranslateToPipe, decorators: [{\r\n            type: Pipe,\r\n            args: [{ name: 'translateTo' }]\r\n        }], ctorParameters: function () { return [{ type: TranslateService }]; } });\n\nfunction factory(init) {\r\n    var ret = (service, ...deps) => {\r\n        return function () {\r\n            if (init) {\r\n                var res = init(service, ...deps);\r\n                res = res.pipe(tap((dics) => {\r\n                    Object.keys(dics).forEach((key) => {\r\n                        service.extendDictionary(key, dics[key]);\r\n                    });\r\n                }));\r\n                return lastValueFrom(res);\r\n            }\r\n            return Promise.resolve();\r\n        };\r\n    };\r\n    return ret;\r\n}\r\nfunction forRootGuard(service) {\r\n    if (service) {\r\n        throw new Error(`TranslateModule.forRoot() called twice. Lazy loaded modules should use TranslateModule.forChild() instead.`);\r\n    }\r\n    return 'guarded';\r\n}\r\nconst S_TRANSLATE = new InjectionToken('S_TRANSLATE');\r\nclass TranslateModule {\r\n    static forRoot(config) {\r\n        return {\r\n            ngModule: TranslateModule,\r\n            providers: [\r\n                TranslateService,\r\n                {\r\n                    provide: DEFAULT_OPTIONS,\r\n                    useValue: {\r\n                        cacheDynamic: config?.cacheDynamic !== undefined ? !!config?.cacheDynamic : true,\r\n                        $less: config?.$less !== undefined ? !!config?.$less : false,\r\n                    },\r\n                },\r\n                {\r\n                    provide: APP_INITIALIZER,\r\n                    useFactory: factory(config.init),\r\n                    deps: config.deps !== undefined ? [TranslateService, ...config.deps] : [TranslateService],\r\n                    multi: true,\r\n                },\r\n            ],\r\n        };\r\n    }\r\n    static forChild(config) {\r\n        return {\r\n            ngModule: TranslateModule,\r\n            providers: [\r\n                TranslateService,\r\n                {\r\n                    provide: S_TRANSLATE,\r\n                    useValue: { id: config?.id?.trim() || v4(), init: config?.extend ? config.extend : undefined },\r\n                },\r\n            ],\r\n        };\r\n    }\r\n}\r\nTranslateModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: TranslateModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nTranslateModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: TranslateModule, declarations: [TranslatePipe, TranslateToPipe, TranslateDirective], exports: [TranslatePipe, TranslateToPipe, TranslateDirective] });\r\nTranslateModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: TranslateModule, imports: [[]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: TranslateModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [TranslatePipe, TranslateToPipe, TranslateDirective],\r\n                    imports: [],\r\n                    exports: [TranslatePipe, TranslateToPipe, TranslateDirective],\r\n                    bootstrap: [],\r\n                }]\r\n        }] });\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { DEFAULT_OPTIONS, S_TRANSLATE, TranslateDirective, TranslateModule, TranslatePipe, TranslateService, TranslateToPipe, factory, forRootGuard };\n//# sourceMappingURL=simply-translate-angular.mjs.map\n","map":{"version":3,"file":"simply-translate-angular.mjs","sources":["../../../projects/translate/src/translate/translate.service.ts","../../../projects/translate/src/translate/translate.directive.ts","../../../projects/translate/src/translate/translate.pipe.ts","../../../projects/translate/src/simply-translate.module.ts","../../../projects/translate/src/simply-translate-angular.ts"],"sourcesContent":["import { APP_INITIALIZER, Inject, Injectable, InjectionToken, Injector, Optional } from '@angular/core';\r\nimport { Translations, Dictionary } from 'simply-translate';\r\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\r\nimport { TranslateDynamicProps, TranslateKey } from 'simply-translate';\r\n\r\nexport const DEFAULT_OPTIONS = new InjectionToken<{ cacheDynamic?: boolean }>('TranslateService DEFAULT_OPTIONS');\r\n\r\n@Injectable()\r\nexport class TranslateService {\r\n    private langChangeSubj = new BehaviorSubject<{ defaultLang?: string; fallbackLang?: string }>({});\r\n    private dictionarySubj = new Subject<void>();\r\n    private service: Translations;\r\n\r\n    public languageChange$ = this.langChangeSubj.asObservable();\r\n    public dictionaryChange$ = this.dictionarySubj.asObservable();\r\n\r\n    public set defaultLang(val: string) {\r\n        this.service.defaultLang = val;\r\n        this.langChangeSubj.next({ defaultLang: this.defaultLang, fallbackLang: this.fallbackLang });\r\n    }\r\n\r\n    public get defaultLang(): string {\r\n        return this.service.defaultLang;\r\n    }\r\n\r\n    public set fallbackLang(val: string) {\r\n        this.service.fallbackLang = val;\r\n        this.langChangeSubj.next({ defaultLang: this.defaultLang, fallbackLang: this.fallbackLang });\r\n    }\r\n\r\n    public get fallbackLang(): string {\r\n        return this.service.fallbackLang;\r\n    }\r\n\r\n    constructor(@Optional() @Inject(DEFAULT_OPTIONS) options) {\r\n        const cd = options ? options.cacheDynamic : false;\r\n        this.service = new Translations({}, { cacheDynamic: options?.cacheDynamic !== false, $less: !!options?.$less });\r\n    }\r\n\r\n    translateTo(lang: string, key: TranslateKey): string;\r\n    translateTo(lang: string, key: TranslateKey, fallback: string): string;\r\n    translateTo(lang: string, key: TranslateKey, dynamicValues: TranslateDynamicProps, fallback?: string): string;\r\n    translateTo(lang: string, key: TranslateKey, dynamicValuesOrFallback?: TranslateDynamicProps | string, fallback?: string): string {\r\n        return this.service.translateTo(lang, key, dynamicValuesOrFallback as any, fallback);\r\n    }\r\n\r\n    translate(key: TranslateKey): string;\r\n    translate(key: TranslateKey, fallback: string): string;\r\n    translate(key: TranslateKey, dynamicValues: TranslateDynamicProps, fallback?: string): string;\r\n    translate(key: TranslateKey, dynamicValuesOrFallback?: TranslateDynamicProps | string, fallback?: string): string {\r\n        return this.service.translate(key, dynamicValuesOrFallback as any, fallback);\r\n    }\r\n\r\n    extendDictionary(lang: string, dictionary: Dictionary) {\r\n        this.service.extendDictionary(lang, dictionary);\r\n        this.dictionarySubj.next();\r\n    }\r\n}\r\n","import { Directive, ElementRef, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { TranslateKey } from 'simply-translate';\nimport { TranslateService } from './translate.service';\n\n@Directive({\n    selector: '[translate]',\n})\nexport class TranslateDirective implements OnInit, OnChanges {\n    private _init = false;\n    private _fb?: string;\n    @Input('translate') _key?: TranslateKey;\n    @Input('to') _to?: string;\n    @Input('values') _values?: { [key: string]: string | number };\n\n    constructor(private element: ElementRef<HTMLElement>, private service: TranslateService) {}\n\n    ngOnInit(): void {\n        this._init = true;\n    }\n    ngOnChanges(changes: SimpleChanges): void {\n        if (!this._init) this._fb = this.element.nativeElement.innerText;\n\n        if (changes._key.currentValue) {\n            this.element.nativeElement.innerText = this.service.translateTo(\n                this._to || this.service.defaultLang!,\n                this._key,\n                this._values,\n                this._fb\n            );\n        } else if (changes._fb.currentValue !== this.element.nativeElement.innerText) {\n            this.element.nativeElement.innerText = this._fb || '';\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { TranslateDynamicProps, TranslateKey } from 'simply-translate';\r\nimport { TranslateService } from './translate.service';\r\n\r\n@Pipe({ name: 'translate' })\r\nexport class TranslatePipe implements PipeTransform {\r\n  constructor(private service: TranslateService) {}\r\n  transform(key: TranslateKey, dynamicOrFallback?: TranslateDynamicProps | string, fallback?: string): string {\r\n    if (key == null || key === '') {\r\n      return key.toString();\r\n    }\r\n    const result = this.service.translate(key, dynamicOrFallback as any, fallback);\r\n    return result;\r\n  }\r\n}\r\n\r\n@Pipe({ name: 'translateTo' })\r\nexport class TranslateToPipe implements PipeTransform {\r\n  constructor(private service: TranslateService) {}\r\n  transform(key: TranslateKey, lang: string, dynamicOrFallback?: TranslateDynamicProps | string, fallback?: string): string {\r\n    if (key == null || key === '') {\r\n      return key.toString();\r\n    }\r\n    const result = this.service.translateTo(lang, key, dynamicOrFallback as any, fallback);\r\n    return result;\r\n  }\r\n}\r\n","import { v4 as uuidv4 } from 'uuid';\r\nimport { APP_INITIALIZER, InjectionToken, ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { DEFAULT_OPTIONS, TranslateService } from './translate/translate.service';\r\nimport { TranslatePipe, TranslateToPipe } from './translate/translate.pipe';\r\nimport { TranslateDirective } from './translate/translate.directive';\r\nimport { isObservable, lastValueFrom, Observable, tap } from 'rxjs';\r\nimport { Dictionary } from 'simply-translate';\r\n\r\nexport function factory(init?: Function) {\r\n  var ret = (service: TranslateService, ...deps: any[]) => {\r\n    return function () {\r\n      if (init) {\r\n        var res: Observable<Record<string, Dictionary>> = init(service, ...deps);\r\n        res = res.pipe(\r\n          tap((dics) => {\r\n            Object.keys(dics).forEach((key) => {\r\n              service.extendDictionary(key, dics[key]);\r\n            });\r\n          })\r\n        );\r\n        return lastValueFrom(res);\r\n      }\r\n      return Promise.resolve();\r\n    };\r\n  };\r\n  return ret;\r\n}\r\n\r\nexport function forRootGuard(service: TranslateService): any {\r\n  if (service) {\r\n    throw new Error(`TranslateModule.forRoot() called twice. Lazy loaded modules should use TranslateModule.forChild() instead.`);\r\n  }\r\n  return 'guarded';\r\n}\r\n\r\nexport interface Config {\r\n  init?: (service: TranslateService, ...any) => Observable<Record<string, Dictionary>>;\r\n  deps?: any[];\r\n  cacheDynamic?: boolean;\r\n  $less?: boolean;\r\n}\r\n\r\nexport interface ChildConfig {\r\n  extend?: (service: TranslateService, ...any) => Observable<Record<string, Dictionary>>;\r\n  deps?: any[];\r\n  id?: string;\r\n}\r\n\r\nexport const S_TRANSLATE = new InjectionToken<{ id: string; extend: Observable<{ [lang: string]: Dictionary }> }>('S_TRANSLATE');\r\n\r\n@NgModule({\r\n  declarations: [TranslatePipe, TranslateToPipe, TranslateDirective],\r\n  imports: [],\r\n  exports: [TranslatePipe, TranslateToPipe, TranslateDirective],\r\n  bootstrap: [],\r\n})\r\nexport class TranslateModule {\r\n  static forRoot(config?: Config): ModuleWithProviders<TranslateModule> {\r\n    return {\r\n      ngModule: TranslateModule,\r\n      providers: [\r\n        TranslateService,\r\n        {\r\n          provide: DEFAULT_OPTIONS,\r\n          useValue: {\r\n            cacheDynamic: config?.cacheDynamic !== undefined ? !!config?.cacheDynamic : true,\r\n            $less: config?.$less !== undefined ? !!config?.$less : false,\r\n          },\r\n        },\r\n        {\r\n          provide: APP_INITIALIZER,\r\n          useFactory: factory(config.init),\r\n          deps: config.deps !== undefined ? [TranslateService, ...config.deps] : [TranslateService],\r\n          multi: true,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n  static forChild(config?: ChildConfig): ModuleWithProviders<TranslateModule> {\r\n    return {\r\n      ngModule: TranslateModule,\r\n      providers: [\r\n        TranslateService,\r\n        {\r\n          provide: S_TRANSLATE,\r\n          useValue: { id: config?.id?.trim() || uuidv4(), init: config?.extend ? config.extend : undefined },\r\n        },\r\n      ],\r\n    };\r\n  }\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["uuidv4"],"mappings":"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"}},"fesm2015":{"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Optional, Inject, Directive, Input, Pipe, APP_INITIALIZER, NgModule } from '@angular/core';\nimport { Translations } from 'simply-translate';\nimport { BehaviorSubject, Subject, tap, lastValueFrom } from 'rxjs';\nimport { v4 } from 'uuid';\n\nconst DEFAULT_OPTIONS = new InjectionToken('TranslateService DEFAULT_OPTIONS');\r\nclass TranslateService {\r\n    constructor(options) {\r\n        this.langChangeSubj = new BehaviorSubject({});\r\n        this.dictionarySubj = new Subject();\r\n        this.languageChange$ = this.langChangeSubj.asObservable();\r\n        this.dictionaryChange$ = this.dictionarySubj.asObservable();\r\n        const cd = options ? options.cacheDynamic : false;\r\n        this.service = new Translations({}, { cacheDynamic: (options === null || options === void 0 ? void 0 : options.cacheDynamic) !== false, $less: !!(options === null || options === void 0 ? void 0 : options.$less) });\r\n    }\r\n    set defaultLang(val) {\r\n        this.service.defaultLang = val;\r\n        this.langChangeSubj.next({ defaultLang: this.defaultLang, fallbackLang: this.fallbackLang });\r\n    }\r\n    get defaultLang() {\r\n        return this.service.defaultLang;\r\n    }\r\n    set fallbackLang(val) {\r\n        this.service.fallbackLang = val;\r\n        this.langChangeSubj.next({ defaultLang: this.defaultLang, fallbackLang: this.fallbackLang });\r\n    }\r\n    get fallbackLang() {\r\n        return this.service.fallbackLang;\r\n    }\r\n    translateTo(lang, key, dynamicValuesOrFallback, fallback) {\r\n        return this.service.translateTo(lang, key, dynamicValuesOrFallback, fallback);\r\n    }\r\n    translate(key, dynamicValuesOrFallback, fallback) {\r\n        return this.service.translate(key, dynamicValuesOrFallback, fallback);\r\n    }\r\n    extendDictionary(lang, dictionary) {\r\n        this.service.extendDictionary(lang, dictionary);\r\n        this.dictionarySubj.next();\r\n    }\r\n}\r\nTranslateService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: TranslateService, deps: [{ token: DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\r\nTranslateService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: TranslateService });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: TranslateService, decorators: [{\r\n            type: Injectable\r\n        }], ctorParameters: function () {\r\n        return [{ type: undefined, decorators: [{\r\n                        type: Optional\r\n                    }, {\r\n                        type: Inject,\r\n                        args: [DEFAULT_OPTIONS]\r\n                    }] }];\r\n    } });\n\nclass TranslateDirective {\r\n    constructor(element, service) {\r\n        this.element = element;\r\n        this.service = service;\r\n        this._init = false;\r\n    }\r\n    ngOnInit() {\r\n        this._init = true;\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (!this._init)\r\n            this._fb = this.element.nativeElement.innerText;\r\n        if (changes._key.currentValue) {\r\n            this.element.nativeElement.innerText = this.service.translateTo(this._to || this.service.defaultLang, this._key, this._values, this._fb);\r\n        }\r\n        else if (changes._fb.currentValue !== this.element.nativeElement.innerText) {\r\n            this.element.nativeElement.innerText = this._fb || '';\r\n        }\r\n    }\r\n}\r\nTranslateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: TranslateDirective, deps: [{ token: i0.ElementRef }, { token: TranslateService }], target: i0.ɵɵFactoryTarget.Directive });\r\nTranslateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.2\", type: TranslateDirective, selector: \"[translate]\", inputs: { _key: [\"translate\", \"_key\"], _to: [\"to\", \"_to\"], _values: [\"values\", \"_values\"] }, usesOnChanges: true, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: TranslateDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[translate]',\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: TranslateService }]; }, propDecorators: { _key: [{\r\n                type: Input,\r\n                args: ['translate']\r\n            }], _to: [{\r\n                type: Input,\r\n                args: ['to']\r\n            }], _values: [{\r\n                type: Input,\r\n                args: ['values']\r\n            }] } });\n\nclass TranslatePipe {\r\n    constructor(service) {\r\n        this.service = service;\r\n    }\r\n    transform(key, dynamicOrFallback, fallback) {\r\n        if (key == null || key === '') {\r\n            return key.toString();\r\n        }\r\n        const result = this.service.translate(key, dynamicOrFallback, fallback);\r\n        return result;\r\n    }\r\n}\r\nTranslatePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: TranslatePipe, deps: [{ token: TranslateService }], target: i0.ɵɵFactoryTarget.Pipe });\r\nTranslatePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: TranslatePipe, name: \"translate\" });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: TranslatePipe, decorators: [{\r\n            type: Pipe,\r\n            args: [{ name: 'translate' }]\r\n        }], ctorParameters: function () { return [{ type: TranslateService }]; } });\r\nclass TranslateToPipe {\r\n    constructor(service) {\r\n        this.service = service;\r\n    }\r\n    transform(key, lang, dynamicOrFallback, fallback) {\r\n        if (key == null || key === '') {\r\n            return key.toString();\r\n        }\r\n        const result = this.service.translateTo(lang, key, dynamicOrFallback, fallback);\r\n        return result;\r\n    }\r\n}\r\nTranslateToPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: TranslateToPipe, deps: [{ token: TranslateService }], target: i0.ɵɵFactoryTarget.Pipe });\r\nTranslateToPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: TranslateToPipe, name: \"translateTo\" });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: TranslateToPipe, decorators: [{\r\n            type: Pipe,\r\n            args: [{ name: 'translateTo' }]\r\n        }], ctorParameters: function () { return [{ type: TranslateService }]; } });\n\nfunction factory(init) {\r\n    var ret = (service, ...deps) => {\r\n        return function () {\r\n            if (init) {\r\n                var res = init(service, ...deps);\r\n                res = res.pipe(tap((dics) => {\r\n                    Object.keys(dics).forEach((key) => {\r\n                        service.extendDictionary(key, dics[key]);\r\n                    });\r\n                }));\r\n                return lastValueFrom(res);\r\n            }\r\n            return Promise.resolve();\r\n        };\r\n    };\r\n    return ret;\r\n}\r\nfunction forRootGuard(service) {\r\n    if (service) {\r\n        throw new Error(`TranslateModule.forRoot() called twice. Lazy loaded modules should use TranslateModule.forChild() instead.`);\r\n    }\r\n    return 'guarded';\r\n}\r\nconst S_TRANSLATE = new InjectionToken('S_TRANSLATE');\r\nclass TranslateModule {\r\n    static forRoot(config) {\r\n        return {\r\n            ngModule: TranslateModule,\r\n            providers: [\r\n                TranslateService,\r\n                {\r\n                    provide: DEFAULT_OPTIONS,\r\n                    useValue: {\r\n                        cacheDynamic: (config === null || config === void 0 ? void 0 : config.cacheDynamic) !== undefined ? !!(config === null || config === void 0 ? void 0 : config.cacheDynamic) : true,\r\n                        $less: (config === null || config === void 0 ? void 0 : config.$less) !== undefined ? !!(config === null || config === void 0 ? void 0 : config.$less) : false,\r\n                    },\r\n                },\r\n                {\r\n                    provide: APP_INITIALIZER,\r\n                    useFactory: factory(config.init),\r\n                    deps: config.deps !== undefined ? [TranslateService, ...config.deps] : [TranslateService],\r\n                    multi: true,\r\n                },\r\n            ],\r\n        };\r\n    }\r\n    static forChild(config) {\r\n        var _a;\r\n        return {\r\n            ngModule: TranslateModule,\r\n            providers: [\r\n                TranslateService,\r\n                {\r\n                    provide: S_TRANSLATE,\r\n                    useValue: { id: ((_a = config === null || config === void 0 ? void 0 : config.id) === null || _a === void 0 ? void 0 : _a.trim()) || v4(), init: (config === null || config === void 0 ? void 0 : config.extend) ? config.extend : undefined },\r\n                },\r\n            ],\r\n        };\r\n    }\r\n}\r\nTranslateModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: TranslateModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nTranslateModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: TranslateModule, declarations: [TranslatePipe, TranslateToPipe, TranslateDirective], exports: [TranslatePipe, TranslateToPipe, TranslateDirective] });\r\nTranslateModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: TranslateModule, imports: [[]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: TranslateModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [TranslatePipe, TranslateToPipe, TranslateDirective],\r\n                    imports: [],\r\n                    exports: [TranslatePipe, TranslateToPipe, TranslateDirective],\r\n                    bootstrap: [],\r\n                }]\r\n        }] });\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { DEFAULT_OPTIONS, S_TRANSLATE, TranslateDirective, TranslateModule, TranslatePipe, TranslateService, TranslateToPipe, factory, forRootGuard };\n//# sourceMappingURL=simply-translate-angular.mjs.map\n","map":{"version":3,"file":"simply-translate-angular.mjs","sources":["../../../projects/translate/src/translate/translate.service.ts","../../../projects/translate/src/translate/translate.directive.ts","../../../projects/translate/src/translate/translate.pipe.ts","../../../projects/translate/src/simply-translate.module.ts","../../../projects/translate/src/simply-translate-angular.ts"],"sourcesContent":["import { APP_INITIALIZER, Inject, Injectable, InjectionToken, Injector, Optional } from '@angular/core';\r\nimport { Translations, Dictionary } from 'simply-translate';\r\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\r\nimport { TranslateDynamicProps, TranslateKey } from 'simply-translate';\r\n\r\nexport const DEFAULT_OPTIONS = new InjectionToken<{ cacheDynamic?: boolean }>('TranslateService DEFAULT_OPTIONS');\r\n\r\n@Injectable()\r\nexport class TranslateService {\r\n    private langChangeSubj = new BehaviorSubject<{ defaultLang?: string; fallbackLang?: string }>({});\r\n    private dictionarySubj = new Subject<void>();\r\n    private service: Translations;\r\n\r\n    public languageChange$ = this.langChangeSubj.asObservable();\r\n    public dictionaryChange$ = this.dictionarySubj.asObservable();\r\n\r\n    public set defaultLang(val: string) {\r\n        this.service.defaultLang = val;\r\n        this.langChangeSubj.next({ defaultLang: this.defaultLang, fallbackLang: this.fallbackLang });\r\n    }\r\n\r\n    public get defaultLang(): string {\r\n        return this.service.defaultLang;\r\n    }\r\n\r\n    public set fallbackLang(val: string) {\r\n        this.service.fallbackLang = val;\r\n        this.langChangeSubj.next({ defaultLang: this.defaultLang, fallbackLang: this.fallbackLang });\r\n    }\r\n\r\n    public get fallbackLang(): string {\r\n        return this.service.fallbackLang;\r\n    }\r\n\r\n    constructor(@Optional() @Inject(DEFAULT_OPTIONS) options) {\r\n        const cd = options ? options.cacheDynamic : false;\r\n        this.service = new Translations({}, { cacheDynamic: options?.cacheDynamic !== false, $less: !!options?.$less });\r\n    }\r\n\r\n    translateTo(lang: string, key: TranslateKey): string;\r\n    translateTo(lang: string, key: TranslateKey, fallback: string): string;\r\n    translateTo(lang: string, key: TranslateKey, dynamicValues: TranslateDynamicProps, fallback?: string): string;\r\n    translateTo(lang: string, key: TranslateKey, dynamicValuesOrFallback?: TranslateDynamicProps | string, fallback?: string): string {\r\n        return this.service.translateTo(lang, key, dynamicValuesOrFallback as any, fallback);\r\n    }\r\n\r\n    translate(key: TranslateKey): string;\r\n    translate(key: TranslateKey, fallback: string): string;\r\n    translate(key: TranslateKey, dynamicValues: TranslateDynamicProps, fallback?: string): string;\r\n    translate(key: TranslateKey, dynamicValuesOrFallback?: TranslateDynamicProps | string, fallback?: string): string {\r\n        return this.service.translate(key, dynamicValuesOrFallback as any, fallback);\r\n    }\r\n\r\n    extendDictionary(lang: string, dictionary: Dictionary) {\r\n        this.service.extendDictionary(lang, dictionary);\r\n        this.dictionarySubj.next();\r\n    }\r\n}\r\n","import { Directive, ElementRef, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { TranslateKey } from 'simply-translate';\nimport { TranslateService } from './translate.service';\n\n@Directive({\n    selector: '[translate]',\n})\nexport class TranslateDirective implements OnInit, OnChanges {\n    private _init = false;\n    private _fb?: string;\n    @Input('translate') _key?: TranslateKey;\n    @Input('to') _to?: string;\n    @Input('values') _values?: { [key: string]: string | number };\n\n    constructor(private element: ElementRef<HTMLElement>, private service: TranslateService) {}\n\n    ngOnInit(): void {\n        this._init = true;\n    }\n    ngOnChanges(changes: SimpleChanges): void {\n        if (!this._init) this._fb = this.element.nativeElement.innerText;\n\n        if (changes._key.currentValue) {\n            this.element.nativeElement.innerText = this.service.translateTo(\n                this._to || this.service.defaultLang!,\n                this._key,\n                this._values,\n                this._fb\n            );\n        } else if (changes._fb.currentValue !== this.element.nativeElement.innerText) {\n            this.element.nativeElement.innerText = this._fb || '';\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { TranslateDynamicProps, TranslateKey } from 'simply-translate';\r\nimport { TranslateService } from './translate.service';\r\n\r\n@Pipe({ name: 'translate' })\r\nexport class TranslatePipe implements PipeTransform {\r\n  constructor(private service: TranslateService) {}\r\n  transform(key: TranslateKey, dynamicOrFallback?: TranslateDynamicProps | string, fallback?: string): string {\r\n    if (key == null || key === '') {\r\n      return key.toString();\r\n    }\r\n    const result = this.service.translate(key, dynamicOrFallback as any, fallback);\r\n    return result;\r\n  }\r\n}\r\n\r\n@Pipe({ name: 'translateTo' })\r\nexport class TranslateToPipe implements PipeTransform {\r\n  constructor(private service: TranslateService) {}\r\n  transform(key: TranslateKey, lang: string, dynamicOrFallback?: TranslateDynamicProps | string, fallback?: string): string {\r\n    if (key == null || key === '') {\r\n      return key.toString();\r\n    }\r\n    const result = this.service.translateTo(lang, key, dynamicOrFallback as any, fallback);\r\n    return result;\r\n  }\r\n}\r\n","import { v4 as uuidv4 } from 'uuid';\r\nimport { APP_INITIALIZER, InjectionToken, ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { DEFAULT_OPTIONS, TranslateService } from './translate/translate.service';\r\nimport { TranslatePipe, TranslateToPipe } from './translate/translate.pipe';\r\nimport { TranslateDirective } from './translate/translate.directive';\r\nimport { isObservable, lastValueFrom, Observable, tap } from 'rxjs';\r\nimport { Dictionary } from 'simply-translate';\r\n\r\nexport function factory(init?: Function) {\r\n  var ret = (service: TranslateService, ...deps: any[]) => {\r\n    return function () {\r\n      if (init) {\r\n        var res: Observable<Record<string, Dictionary>> = init(service, ...deps);\r\n        res = res.pipe(\r\n          tap((dics) => {\r\n            Object.keys(dics).forEach((key) => {\r\n              service.extendDictionary(key, dics[key]);\r\n            });\r\n          })\r\n        );\r\n        return lastValueFrom(res);\r\n      }\r\n      return Promise.resolve();\r\n    };\r\n  };\r\n  return ret;\r\n}\r\n\r\nexport function forRootGuard(service: TranslateService): any {\r\n  if (service) {\r\n    throw new Error(`TranslateModule.forRoot() called twice. Lazy loaded modules should use TranslateModule.forChild() instead.`);\r\n  }\r\n  return 'guarded';\r\n}\r\n\r\nexport interface Config {\r\n  init?: (service: TranslateService, ...any) => Observable<Record<string, Dictionary>>;\r\n  deps?: any[];\r\n  cacheDynamic?: boolean;\r\n  $less?: boolean;\r\n}\r\n\r\nexport interface ChildConfig {\r\n  extend?: (service: TranslateService, ...any) => Observable<Record<string, Dictionary>>;\r\n  deps?: any[];\r\n  id?: string;\r\n}\r\n\r\nexport const S_TRANSLATE = new InjectionToken<{ id: string; extend: Observable<{ [lang: string]: Dictionary }> }>('S_TRANSLATE');\r\n\r\n@NgModule({\r\n  declarations: [TranslatePipe, TranslateToPipe, TranslateDirective],\r\n  imports: [],\r\n  exports: [TranslatePipe, TranslateToPipe, TranslateDirective],\r\n  bootstrap: [],\r\n})\r\nexport class TranslateModule {\r\n  static forRoot(config?: Config): ModuleWithProviders<TranslateModule> {\r\n    return {\r\n      ngModule: TranslateModule,\r\n      providers: [\r\n        TranslateService,\r\n        {\r\n          provide: DEFAULT_OPTIONS,\r\n          useValue: {\r\n            cacheDynamic: config?.cacheDynamic !== undefined ? !!config?.cacheDynamic : true,\r\n            $less: config?.$less !== undefined ? !!config?.$less : false,\r\n          },\r\n        },\r\n        {\r\n          provide: APP_INITIALIZER,\r\n          useFactory: factory(config.init),\r\n          deps: config.deps !== undefined ? [TranslateService, ...config.deps] : [TranslateService],\r\n          multi: true,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n  static forChild(config?: ChildConfig): ModuleWithProviders<TranslateModule> {\r\n    return {\r\n      ngModule: TranslateModule,\r\n      providers: [\r\n        TranslateService,\r\n        {\r\n          provide: S_TRANSLATE,\r\n          useValue: { id: config?.id?.trim() || uuidv4(), init: config?.extend ? config.extend : undefined },\r\n        },\r\n      ],\r\n    };\r\n  }\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["uuidv4"],"mappings":";;;;;;MAKa,eAAe,GAAG,IAAI,cAAc,CAA6B,kCAAkC,EAAE;MAGrG,gBAAgB;IA0BzB,YAAiD,OAAO;QAzBhD,mBAAc,GAAG,IAAI,eAAe,CAAkD,EAAE,CAAC,CAAC;QAC1F,mBAAc,GAAG,IAAI,OAAO,EAAQ,CAAC;QAGtC,oBAAe,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;QACrD,sBAAiB,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;QAqB1D,MAAM,EAAE,GAAG,OAAO,GAAG,OAAO,CAAC,YAAY,GAAG,KAAK,CAAC;QAClD,IAAI,CAAC,OAAO,GAAG,IAAI,YAAY,CAAC,EAAE,EAAE,EAAE,YAAY,EAAE,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,YAAY,MAAK,KAAK,EAAE,KAAK,EAAE,CAAC,EAAC,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,KAAK,CAAA,EAAE,CAAC,CAAC;KACnH;IArBD,IAAW,WAAW,CAAC,GAAW;QAC9B,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,GAAG,CAAC;QAC/B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,EAAE,YAAY,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;KAChG;IAED,IAAW,WAAW;QAClB,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;KACnC;IAED,IAAW,YAAY,CAAC,GAAW;QAC/B,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,GAAG,CAAC;QAChC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,EAAE,YAAY,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;KAChG;IAED,IAAW,YAAY;QACnB,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;KACpC;IAUD,WAAW,CAAC,IAAY,EAAE,GAAiB,EAAE,uBAAwD,EAAE,QAAiB;QACpH,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,EAAE,GAAG,EAAE,uBAA8B,EAAE,QAAQ,CAAC,CAAC;KACxF;IAKD,SAAS,CAAC,GAAiB,EAAE,uBAAwD,EAAE,QAAiB;QACpG,OAAO,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,EAAE,uBAA8B,EAAE,QAAQ,CAAC,CAAC;KAChF;IAED,gBAAgB,CAAC,IAAY,EAAE,UAAsB;QACjD,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;QAChD,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;KAC9B;;6GAhDQ,gBAAgB,kBA0BO,eAAe;iHA1BtC,gBAAgB;2FAAhB,gBAAgB;kBAD5B,UAAU;;;8BA2BM,QAAQ;;8BAAI,MAAM;+BAAC,eAAe;;;;MC3BtC,kBAAkB;IAO3B,YAAoB,OAAgC,EAAU,OAAyB;QAAnE,YAAO,GAAP,OAAO,CAAyB;QAAU,YAAO,GAAP,OAAO,CAAkB;QAN/E,UAAK,GAAG,KAAK,CAAC;KAMqE;IAE3F,QAAQ;QACJ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;KACrB;IACD,WAAW,CAAC,OAAsB;QAC9B,IAAI,CAAC,IAAI,CAAC,KAAK;YAAE,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC;QAEjE,IAAI,OAAO,CAAC,IAAI,CAAC,YAAY,EAAE;YAC3B,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAC3D,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,WAAY,EACrC,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,GAAG,CACX,CAAC;SACL;aAAM,IAAI,OAAO,CAAC,GAAG,CAAC,YAAY,KAAK,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,SAAS,EAAE;YAC1E,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC;SACzD;KACJ;;+GAzBQ,kBAAkB;mGAAlB,kBAAkB;2FAAlB,kBAAkB;kBAH9B,SAAS;mBAAC;oBACP,QAAQ,EAAE,aAAa;iBAC1B;6HAIuB,IAAI;sBAAvB,KAAK;uBAAC,WAAW;gBACL,GAAG;sBAAf,KAAK;uBAAC,IAAI;gBACM,OAAO;sBAAvB,KAAK;uBAAC,QAAQ;;;MCPN,aAAa;IACxB,YAAoB,OAAyB;QAAzB,YAAO,GAAP,OAAO,CAAkB;KAAI;IACjD,SAAS,CAAC,GAAiB,EAAE,iBAAkD,EAAE,QAAiB;QAChG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,KAAK,EAAE,EAAE;YAC7B,OAAO,GAAG,CAAC,QAAQ,EAAE,CAAC;SACvB;QACD,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,EAAE,iBAAwB,EAAE,QAAQ,CAAC,CAAC;QAC/E,OAAO,MAAM,CAAC;KACf;;0GARU,aAAa;wGAAb,aAAa;2FAAb,aAAa;kBADzB,IAAI;mBAAC,EAAE,IAAI,EAAE,WAAW,EAAE;;MAad,eAAe;IAC1B,YAAoB,OAAyB;QAAzB,YAAO,GAAP,OAAO,CAAkB;KAAI;IACjD,SAAS,CAAC,GAAiB,EAAE,IAAY,EAAE,iBAAkD,EAAE,QAAiB;QAC9G,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,KAAK,EAAE,EAAE;YAC7B,OAAO,GAAG,CAAC,QAAQ,EAAE,CAAC;SACvB;QACD,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,EAAE,GAAG,EAAE,iBAAwB,EAAE,QAAQ,CAAC,CAAC;QACvF,OAAO,MAAM,CAAC;KACf;;4GARU,eAAe;0GAAf,eAAe;2FAAf,eAAe;kBAD3B,IAAI;mBAAC,EAAE,IAAI,EAAE,aAAa,EAAE;;;SCPb,OAAO,CAAC,IAAe;IACrC,IAAI,GAAG,GAAG,CAAC,OAAyB,EAAE,GAAG,IAAW;QAClD,OAAO;YACL,IAAI,IAAI,EAAE;gBACR,IAAI,GAAG,GAA2C,IAAI,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,CAAC;gBACzE,GAAG,GAAG,GAAG,CAAC,IAAI,CACZ,GAAG,CAAC,CAAC,IAAI;oBACP,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG;wBAC5B,OAAO,CAAC,gBAAgB,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;qBAC1C,CAAC,CAAC;iBACJ,CAAC,CACH,CAAC;gBACF,OAAO,aAAa,CAAC,GAAG,CAAC,CAAC;aAC3B;YACD,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;SAC1B,CAAC;KACH,CAAC;IACF,OAAO,GAAG,CAAC;AACb,CAAC;SAEe,YAAY,CAAC,OAAyB;IACpD,IAAI,OAAO,EAAE;QACX,MAAM,IAAI,KAAK,CAAC,4GAA4G,CAAC,CAAC;KAC/H;IACD,OAAO,SAAS,CAAC;AACnB,CAAC;MAeY,WAAW,GAAG,IAAI,cAAc,CAAqE,aAAa,EAAE;MAQpH,eAAe;IAC1B,OAAO,OAAO,CAAC,MAAe;QAC5B,OAAO;YACL,QAAQ,EAAE,eAAe;YACzB,SAAS,EAAE;gBACT,gBAAgB;gBAChB;oBACE,OAAO,EAAE,eAAe;oBACxB,QAAQ,EAAE;wBACR,YAAY,EAAE,CAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,YAAY,MAAK,SAAS,GAAG,CAAC,EAAC,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,YAAY,CAAA,GAAG,IAAI;wBAChF,KAAK,EAAE,CAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,KAAK,MAAK,SAAS,GAAG,CAAC,EAAC,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,KAAK,CAAA,GAAG,KAAK;qBAC7D;iBACF;gBACD;oBACE,OAAO,EAAE,eAAe;oBACxB,UAAU,EAAE,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC;oBAChC,IAAI,EAAE,MAAM,CAAC,IAAI,KAAK,SAAS,GAAG,CAAC,gBAAgB,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC;oBACzF,KAAK,EAAE,IAAI;iBACZ;aACF;SACF,CAAC;KACH;IACD,OAAO,QAAQ,CAAC,MAAoB;;QAClC,OAAO;YACL,QAAQ,EAAE,eAAe;YACzB,SAAS,EAAE;gBACT,gBAAgB;gBAChB;oBACE,OAAO,EAAE,WAAW;oBACpB,QAAQ,EAAE,EAAE,EAAE,EAAE,CAAA,MAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,EAAE,0CAAE,IAAI,EAAE,KAAIA,EAAM,EAAE,EAAE,IAAI,EAAE,CAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,MAAM,IAAG,MAAM,CAAC,MAAM,GAAG,SAAS,EAAE;iBACnG;aACF;SACF,CAAC;KACH;;4GAjCU,eAAe;6GAAf,eAAe,iBALX,aAAa,EAAE,eAAe,EAAE,kBAAkB,aAEvD,aAAa,EAAE,eAAe,EAAE,kBAAkB;6GAGjD,eAAe,YAJjB,EAAE;2FAIA,eAAe;kBAN3B,QAAQ;mBAAC;oBACR,YAAY,EAAE,CAAC,aAAa,EAAE,eAAe,EAAE,kBAAkB,CAAC;oBAClE,OAAO,EAAE,EAAE;oBACX,OAAO,EAAE,CAAC,aAAa,EAAE,eAAe,EAAE,kBAAkB,CAAC;oBAC7D,SAAS,EAAE,EAAE;iBACd;;;ACxDD;;;;;;"}}}